{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import View from\"react-native-web/dist/exports/View\";import{KeyboardAwareScrollView}from'react-native-keyboard-aware-scroll-view';import{widthPercentageToDP as wp}from'react-native-responsive-screen';import{connect}from'react-redux';import{Loading}from\"../../components/Loading/loading\";import{NoDataFound}from\"../../components/NoData/noData\";import{MowButtonBasic}from\"../../components/ui/Common/Button/MowButton\";import{MowInput}from\"../../components/ui/Common/Input/MowInput\";import MowContainer from\"../../components/ui/Core/Container/MowContainer\";import{CustomerController}from\"../../controller/customer.controller\";import{setUser}from\"../../store/actions/userActions\";import{mowColors}from\"../../values/Colors/MowColors\";import{pageContainerStyle}from\"../../values/Styles/MowStyles\";var MembershipScreen=function(_React$Component){_inherits(MembershipScreen,_React$Component);var _super=_createSuper(MembershipScreen);function MembershipScreen(props){var _this;_classCallCheck(this,MembershipScreen);_this=_super.call(this,props);_this.modelController=new CustomerController();_this.inputStyle={container:{backgroundColor:mowColors.viewBGColor}};_this.state={isLoading:null,membershipId:_this.props.user.user.membershipId};return _this;}_createClass(MembershipScreen,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"render\",value:function render(){var user=this.props.user.user;return React.createElement(MowContainer,{navigation:this.props.navigation,footerActiveIndex:2,title:\"Membership Activation\"},user===null?React.createElement(View,null,React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null)):user.membershipId!==null?React.createElement(View,null,React.createElement(KeyboardAwareScrollView,{style:pageContainerStyle,showsVerticalScrollIndicator:false},React.createElement(MowInput,{containerStyle:this.inputStyle.container,onChangeText:function onChangeText(value){},placeholder:'Membership ID',leftIcon:'user',type:'text'})),React.createElement(View,{style:{marginHorizontal:wp('3%')}},React.createElement(MowButtonBasic,{onPress:function onPress(){},size:'medium',type:'success'},\"Activate\"))):React.createElement(View,null,React.createElement(NoDataFound,{message:\"No Membership Activated\"}),React.createElement(View,{style:{marginHorizontal:wp('3%'),marginTop:200}},React.createElement(MowButtonBasic,{onPress:function onPress(){},size:'medium',type:'success'},\"Purchase Membership\"))));}}]);return MembershipScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){var user=state.user;return{user:user};};var mapDispatchToProps={setUser:setUser};export default connect(mapStateToProps,mapDispatchToProps)(MembershipScreen);","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/scenes/account/membership.component.tsx"],"names":["widthPercentageToDP","MembershipScreen","React","modelController","inputStyle","container","backgroundColor","mowColors","isLoading","membershipId","user","marginHorizontal","wp","marginTop","mapStateToProps","state","mapDispatchToProps","setUser","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { connect } from 'react-redux';\nimport { Loading } from '../../components/Loading/loading';\nimport { NoDataFound } from '../../components/NoData/noData';\nimport { MowButtonBasic } from '../../components/ui/Common/Button/MowButton';\nimport { MowInput } from '../../components/ui/Common/Input/MowInput';\nimport MowContainer from '../../components/ui/Core/Container/MowContainer';\nimport { CustomerController } from '../../controller/customer.controller';\nimport { setUser } from '../../store/actions/userActions';\nimport { mowColors } from '../../values/Colors/MowColors';\nimport { pageContainerStyle } from '../../values/Styles/MowStyles';\n\ninterface IProps {\n    navigation: any;\n    user: any;\n    setUser(data: any): any;\n}\n\ninterface IState {\n    isLoading: boolean;\n\n    membershipId: string;\n}\n\nclass MembershipScreen extends React.Component<IProps, IState> {\n\n    modelController = new CustomerController();\n\n    inputStyle = {\n        container: {\n            backgroundColor: mowColors.viewBGColor,\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: null,\n\n            membershipId: this.props.user.user.membershipId,\n        }\n    }\n\n    componentDidMount() {\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {\n        //     this.setState({ categories: null });\n        //     this.getCategories(this.props.category.department);\n        // })\n    }\n\n    componentWillUnmount() {\n        // this._unsubscribe();\n    }\n\n    // updateData() {\n    //     const {\n    //         firstName,\n    //         lastName,\n    //         email,\n    //     } = this.state;\n\n    //     this.modelController.update(this.props.user.user.uuid, { firstName, lastName, email })\n    //         .subscribe(async (result: any) => {\n    //             const user = result.data.data;\n    //             this.props.setUser(user);\n    //             await AsyncStorage.setItem(USER, JSON.stringify(user));\n    //             _showToast.success('Profile Updated');\n    //         })\n    // }\n\n    // onChange = (name, value) => {\n    //     if (name === 'firstName') {\n    //         this.setState({ firstName: value })\n    //     }\n\n    //     if (name === 'lastName') {\n    //         this.setState({ lastName: value })\n    //     }\n\n    //     if (name === 'email') {\n    //         this.setState({ email: value })\n    //     }\n    // }\n\n    render() {\n        const user = this.props.user.user;\n        return (\n            <MowContainer\n                navigation={this.props.navigation}\n                footerActiveIndex={2}\n                title='Membership Activation'>\n                {\n                    user === null ?\n                        <View>\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                        </View> :\n                        (\n                            user.membershipId !== null ?\n                                <View>\n                                    <KeyboardAwareScrollView\n                                        style={pageContainerStyle}\n                                        showsVerticalScrollIndicator={false}>\n                                        <MowInput\n                                            containerStyle={this.inputStyle.container}\n                                            onChangeText={value => { }}\n                                            placeholder={'Membership ID'}\n                                            leftIcon={'user'}\n                                            type={'text'} />\n                                    </KeyboardAwareScrollView>\n                                    <View\n                                        style={{ marginHorizontal: wp('3%') }}>\n                                        <MowButtonBasic\n                                            onPress={() => { }}\n                                            size={'medium'}\n                                            type={'success'}>\n                                            Activate\n                                </MowButtonBasic>\n                                    </View>\n                                </View> : <View>\n                                    <NoDataFound message='No Membership Activated' />\n                                    <View\n                                        style={{ marginHorizontal: wp('3%'), marginTop: 200 }}>\n                                        <MowButtonBasic\n                                            onPress={() => { }}\n                                            size={'medium'}\n                                            type={'success'}>\n                                            Purchase Membership\n                                </MowButtonBasic>\n                                    </View>\n                                </View>\n                        )\n                }\n            </MowContainer>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state;\n    return { user };\n};\nconst mapDispatchToProps = {\n    setUser: setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MembershipScreen);"]},"metadata":{},"sourceType":"module"}