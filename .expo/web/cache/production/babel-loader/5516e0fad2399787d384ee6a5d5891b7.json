{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import FAIcon from\"@expo/vector-icons/FontAwesome\";import{Dialog,SlideAnimation}from'react-native-popup-dialog';import{deviceWidth}from\"../../../../values/Constants/MowConstants\";import{mowColors}from\"../../../../values/Colors/MowColors\";import{shadowStyle}from\"../../../../values/Styles/MowStyles\";import{heightPercentageToDP as hp}from\"react-native-responsive-screen\";var dialogType={DEFAULT:\"default\",SUCCESS:\"success\",ERROR:\"error\",WARNING:\"warning\"};var MowDialog=function(_Component){_inherits(MowDialog,_Component);var _super=_createSuper(MowDialog);_createClass(MowDialog,[{key:\"componentDidMount\",value:function componentDidMount(){this._isMounted=true;}}]);function MowDialog(props){var _this;_classCallCheck(this,MowDialog);_this=_super.call(this,props);_this._isMounted=false;_this.styles={iconView:{justifyContent:\"center\",alignItems:\"center\",bottom:-45,zIndex:99999999999,backgroundColor:mowColors.viewBGColor,width:hp(\"10%\"),height:hp(\"10%\"),alignSelf:\"center\",borderRadius:100,borderWidth:10,borderColor:mowColors.viewBGColor},image:{width:hp(\"7%\"),height:hp(\"7%\")},icon:{width:hp(\"3%\"),height:hp(\"3%\"),color:\"white\",fontSize:hp(\"3%\"),textAlign:\"center\"},contentMainParentView:{height:hp(\"30%\"),bottom:0},contentMainView:{height:hp(\"23%\"),backgroundColor:mowColors.viewBGColor,borderRadius:30,paddingTop:25},contentView:{height:\"65%\",alignItems:\"center\",justifyContent:\"center\",paddingHorizontal:30},title:{fontSize:hp(\"1.8\"),textAlign:\"center\",marginTop:hp(1),color:mowColors.mainColor,fontWeight:\"600\"},message:{fontSize:hp(\"1.8%\"),textAlign:\"center\",marginTop:10,lineHeight:20,color:mowColors.textColor,fontWeight:\"400\"},buttonViewMain:{flexDirection:\"row\",height:\"35%\",justifyContent:\"center\",alignItems:\"center\"},buttonTouchable:{borderRadius:10,height:\"60%\",justifyContent:\"center\"},buttonText:{alignSelf:\"center\",color:\"white\",fontSize:hp(\"2.5%\"),fontWeight:\"500\",textAlign:\"center\"}};global.__dialogThis=_assertThisInitialized(_this);_this.state={showDialog:false,title:\"\",message:\"\",twoButton:false,dialogType:\"default\",bpt:\"\",bnt:\"\"};return _this;}_createClass(MowDialog,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._isMounted=false;}},{key:\"showDialog\",value:function showDialog(flag){this.setState({showDialog:flag});}},{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps,nextContext){global.__dialogThis=this;}},{key:\"_buttonPositiveClick\",value:function _buttonPositiveClick(){if(typeof this.state.buttonPositive=='function'){this.state.buttonPositive();}this.showDialog(false);}},{key:\"_buttonNegativeClick\",value:function _buttonNegativeClick(){if(typeof this.state.buttonNegative()=='function'){this.state.buttonNegative();}this.showDialog(false);}},{key:\"_buttonView\",value:function _buttonView(buttonColor){var _this2=this;return React.createElement(View,{style:[this.styles.buttonViewMain,{paddingHorizontal:this.state.twoButton?30:90}]},React.createElement(TouchableOpacity,{onPress:function onPress(){_this2._buttonPositiveClick();},style:[shadowStyle,{flex:1,marginRight:this.state.twoButton?10:0,borderRadius:10,backgroundColor:buttonColor}]},React.createElement(View,{style:[this.styles.buttonTouchable]},React.createElement(Text,{style:this.styles.buttonText},this.state.bpt))),this.state.twoButton&&React.createElement(TouchableOpacity,{onPress:function onPress(){_this2._buttonNegativeClick();},style:[shadowStyle,{flex:1,marginLeft:10,borderRadius:10,backgroundColor:buttonColor}]},React.createElement(View,{style:[this.styles.buttonTouchable]},React.createElement(Text,{style:this.styles.buttonText},this.state.bnt))));}},{key:\"_default\",value:function _default(){return React.createElement(View,null,React.createElement(View,{style:this.styles.iconView},React.createElement(Image,{resizeMode:\"contain\",style:this.styles.image,source:require(\"../../../../assets/logo/logo.png\")})),React.createElement(View,{style:this.styles.contentMainParentView},React.createElement(View,{style:this.styles.contentMainView},React.createElement(View,{style:this.styles.contentView},React.createElement(Text,{style:this.styles.title},this.state.title),React.createElement(Text,{style:this.styles.message},this.state.message)),this._buttonView(mowColors.mainColor))));}},{key:\"_success\",value:function _success(){return React.createElement(View,null,React.createElement(View,{style:[this.styles.iconView,{backgroundColor:mowColors.successColor,borderWidth:10}]},React.createElement(FAIcon,{style:this.styles.icon,name:\"check\"})),React.createElement(View,{style:this.styles.contentMainParentView},React.createElement(View,{style:this.styles.contentMainView},React.createElement(View,{style:this.styles.contentView},React.createElement(Text,{style:[this.styles.title,{fontSize:hp(\"3\"),color:mowColors.successColor}]},this.state.title),React.createElement(Text,{style:this.styles.message},this.state.message)),this._buttonView(mowColors.successColor))));}},{key:\"_error\",value:function _error(){return React.createElement(View,null,React.createElement(View,{style:[this.styles.iconView,{backgroundColor:mowColors.errorColor,borderWidth:10}]},React.createElement(FAIcon,{style:this.styles.icon,name:\"times\"})),React.createElement(View,{style:this.styles.contentMainParentView},React.createElement(View,{style:this.styles.contentMainView},React.createElement(View,{style:this.styles.contentView},React.createElement(Text,{style:[this.styles.title,{fontSize:hp(\"3\"),color:mowColors.errorColor}]},this.state.title),React.createElement(Text,{style:this.styles.message},this.state.message)),this._buttonView(mowColors.errorColor))));}},{key:\"_warning\",value:function _warning(){return React.createElement(View,null,React.createElement(View,{style:[this.styles.iconView,{backgroundColor:mowColors.warningColor,borderWidth:10}]},React.createElement(FAIcon,{style:this.styles.icon,name:\"exclamation\"})),React.createElement(View,{style:this.styles.contentMainParentView},React.createElement(View,{style:this.styles.contentMainView},React.createElement(View,{style:this.styles.contentView},React.createElement(Text,{style:[this.styles.title,{fontSize:hp(\"3\"),color:mowColors.warningColor}]},this.state.title),React.createElement(Text,{style:this.styles.message},this.state.message)),this._buttonView(mowColors.warningColor))));}},{key:\"render\",value:function render(){var _this3=this;if(this.state.showDialog!==false){return React.createElement(Dialog,{overlayBackgroundColor:\"#454545\",width:deviceWidth*0.8,visible:this.state.showDialog,onTouchOutside:function onTouchOutside(){if(_this3.state.onTouchOutside){_this3.showDialog(false);}},dialogAnimation:new SlideAnimation({slideFrom:'bottom'}),dialogStyle:{zIndex:999,backgroundColor:\"transparent\"}},React.createElement(View,null,!this.state.dialogType&&this._default(),this.state.dialogType===dialogType.DEFAULT&&this._default(),this.state.dialogType===dialogType.SUCCESS&&this._success(),this.state.dialogType===dialogType.ERROR&&this._error(),this.state.dialogType===dialogType.WARNING&&this._warning()));}return null;}}]);return MowDialog;}(Component);export{MowDialog as default};","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/components/ui/Common/Dialog/MowDialog.js"],"names":["heightPercentageToDP","dialogType","DEFAULT","SUCCESS","ERROR","WARNING","MowDialog","_isMounted","styles","iconView","justifyContent","alignItems","bottom","zIndex","backgroundColor","mowColors","width","hp","height","alignSelf","borderRadius","borderWidth","borderColor","image","icon","color","fontSize","textAlign","contentMainParentView","contentMainView","paddingTop","contentView","paddingHorizontal","title","marginTop","fontWeight","message","lineHeight","buttonViewMain","flexDirection","buttonTouchable","buttonText","global","showDialog","twoButton","bpt","bnt","flag","nextProps","nextContext","buttonColor","flex","marginRight","marginLeft","require","deviceWidth","slideFrom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, TouchableOpacity, Text, Image } from 'react-native';\nimport FAIcon from \"react-native-vector-icons/FontAwesome\";\nimport { Dialog, SlideAnimation } from 'react-native-popup-dialog';\nimport { deviceWidth } from \"../../../../values/Constants/MowConstants\";\nimport { mowColors } from \"../../../../values/Colors/MowColors\";\nimport { shadowStyle } from \"../../../../values/Styles/MowStyles\";\nimport { heightPercentageToDP as hp } from \"react-native-responsive-screen\";\n\nconst dialogType = {\n    DEFAULT: \"default\",\n    SUCCESS: \"success\",\n    ERROR: \"error\",\n    WARNING: \"warning\"\n};\n\nexport default class MowDialog extends Component {\n\n    _isMounted = false;\n\n    styles = {\n        iconView: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            bottom: -45,\n            zIndex: 99999999999,\n            backgroundColor: mowColors.viewBGColor,\n            width: hp(\"10%\"),\n            height: hp(\"10%\"),\n            alignSelf: \"center\",\n            borderRadius: 100,\n            borderWidth: 10,\n            borderColor: mowColors.viewBGColor\n        },\n        image: {\n            width: hp(\"7%\"),\n            height: hp(\"7%\"),\n        },\n        icon: {\n            width: hp(\"3%\"),\n            height: hp(\"3%\"),\n            color: \"white\",\n            fontSize: hp(\"3%\"),\n            textAlign: \"center\"\n        },\n        contentMainParentView: {\n            height: hp(\"30%\"),\n            bottom: 0,\n        },\n        contentMainView: {\n            height: hp(\"23%\"),\n            backgroundColor: mowColors.viewBGColor,\n            borderRadius: 30,\n            paddingTop: 25\n        },\n        contentView: {\n            height: \"65%\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            paddingHorizontal: 30\n        },\n        title: {\n            fontSize: hp(\"1.8\"),\n            textAlign: \"center\",\n            marginTop: hp(1),\n            color: mowColors.mainColor,\n            fontWeight: \"600\"\n        },\n        message: {\n            fontSize: hp(\"1.8%\"),\n            textAlign: \"center\",\n            marginTop: 10,\n            lineHeight: 20,\n            color: mowColors.textColor,\n            fontWeight: \"400\"\n        },\n        buttonViewMain: {\n            flexDirection: \"row\",\n            height: \"35%\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n        },\n        buttonTouchable: {\n            borderRadius: 10,\n            height: \"60%\",\n            justifyContent: \"center\"\n        },\n        buttonText: {\n            alignSelf: \"center\",\n            color: \"white\",\n            fontSize: hp(\"2.5%\"),\n            fontWeight: \"500\",\n            textAlign: \"center\"\n        }\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    constructor(props) {\n        super(props);\n\n        global.__dialogThis = this;\n\n        this.state = {\n            showDialog: false,\n            title: \"\",\n            message: \"\",\n            twoButton: false,\n            dialogType: \"default\",\n            bpt: \"\",\n            bnt: \"\"\n        };\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    showDialog(flag) {\n        this.setState({ showDialog: flag })\n    }\n\n    // to reign dialog this\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        global.__dialogThis = this;\n    }\n\n    _buttonPositiveClick() {\n        if (typeof this.state.buttonPositive == 'function') {\n            this.state.buttonPositive();\n        }\n        this.showDialog(false)\n    }\n\n    _buttonNegativeClick() {\n        if (typeof this.state.buttonNegative() == 'function') {\n            this.state.buttonNegative();\n        }\n        this.showDialog(false)\n    }\n\n    // dialog button ui\n    _buttonView(buttonColor) {\n\n        return (\n\n            <View\n                style={[this.styles.buttonViewMain, { paddingHorizontal: this.state.twoButton ? 30 : 90 }]}>\n\n                {/* positive button touchable */}\n                <TouchableOpacity\n                    onPress={() => { this._buttonPositiveClick() }}\n                    style={[shadowStyle, { flex: 1, marginRight: this.state.twoButton ? 10 : 0, borderRadius: 10, backgroundColor: buttonColor }]}>\n\n                    <View\n                        style={[this.styles.buttonTouchable]}>\n\n                        {/* positive button text */}\n                        <Text\n                            style={this.styles.buttonText}>\n\n                            {this.state.bpt}\n\n                        </Text>\n\n                    </View>\n\n                </TouchableOpacity>\n\n                {\n                    this.state.twoButton &&\n\n                    //negative button touchable\n                    <TouchableOpacity\n                        onPress={() => { this._buttonNegativeClick() }}\n                        style={[shadowStyle, { flex: 1, marginLeft: 10, borderRadius: 10, backgroundColor: buttonColor }]}>\n\n                        <View\n                            style={[this.styles.buttonTouchable]}>\n\n                            {/* negative button text */}\n                            <Text\n                                style={this.styles.buttonText}>\n\n                                {this.state.bnt}\n\n                            </Text>\n\n                        </View>\n\n                    </TouchableOpacity>\n                }\n\n            </View>\n\n        );\n\n    }\n\n    //default dialog header\n    _default() {\n\n        return (\n\n            <View>\n\n                {/* dialog image */}\n                <View\n                    style={this.styles.iconView}>\n\n                    <Image\n                        resizeMode={\"contain\"}\n                        style={this.styles.image}\n                        source={require(\"../../../../assets/logo/logo.png\")} />\n\n                </View>\n\n                <View\n                    style={this.styles.contentMainParentView}>\n\n                    {/* dialog message view */}\n                    <View\n                        style={this.styles.contentMainView}>\n\n                        <View\n                            style={this.styles.contentView}>\n\n                            {/* title text */}\n                            <Text\n                                style={this.styles.title}>\n\n                                {this.state.title}\n\n                            </Text>\n\n                            {/* message text */}\n                            <Text\n                                style={this.styles.message}>\n\n                                {this.state.message}\n\n                            </Text>\n\n                        </View>\n\n                        {this._buttonView(mowColors.mainColor)}\n\n                    </View>\n\n                </View>\n\n            </View>\n\n        );\n    }\n\n    // success dialog\n    _success() {\n        return (\n\n            <View>\n\n                {/* dialog icon view  */}\n                <View\n                    style={[this.styles.iconView, {\n                        backgroundColor: mowColors.successColor,\n                        borderWidth: 10\n                    }]}>\n\n                    {/* dialog icon */}\n                    <FAIcon\n                        style={this.styles.icon}\n                        name={\"check\"} />\n\n                </View>\n\n                <View\n                    style={this.styles.contentMainParentView}>\n\n                    {/* dialog message view */}\n                    <View\n                        style={this.styles.contentMainView}>\n\n                        <View\n                            style={this.styles.contentView}>\n\n                            {/* title text */}\n                            <Text\n                                style={[this.styles.title, {\n                                    fontSize: hp(\"3\"),\n                                    color: mowColors.successColor\n                                }]}>\n\n                                {this.state.title}\n\n                            </Text>\n\n                            {/* message text */}\n                            <Text\n                                style={this.styles.message}>\n\n                                {this.state.message}\n\n                            </Text>\n\n                        </View>\n\n                        {this._buttonView(mowColors.successColor)}\n\n                    </View>\n\n                </View>\n\n            </View>\n\n        );\n    }\n\n    _error() {\n        return (\n\n            <View>\n\n                {/* dialog icon view */}\n                <View\n                    style={[this.styles.iconView, {\n                        backgroundColor: mowColors.errorColor,\n                        borderWidth: 10\n                    }]}>\n\n                    {/* dialog icon */}\n                    <FAIcon\n                        style={this.styles.icon}\n                        name={\"times\"} />\n\n                </View>\n\n                <View\n                    style={this.styles.contentMainParentView}>\n\n                    {/* dialog message view */}\n                    <View\n                        style={this.styles.contentMainView}>\n\n                        <View\n                            style={this.styles.contentView}>\n\n                            {/* title text */}\n                            <Text\n                                style={[this.styles.title, {\n                                    fontSize: hp(\"3\"),\n                                    color: mowColors.errorColor\n                                }]}>\n\n                                {this.state.title}\n\n                            </Text>\n\n                            {/* message text */}\n                            <Text\n                                style={this.styles.message}>\n\n                                {this.state.message}\n\n                            </Text>\n\n                        </View>\n\n                        {this._buttonView(mowColors.errorColor)}\n\n                    </View>\n\n                </View>\n\n            </View>\n\n        );\n    }\n\n    // warning dialog\n    _warning() {\n        return (\n\n            <View>\n\n                {/* dialog icon view  */}\n                <View\n                    style={[this.styles.iconView, {\n                        backgroundColor: mowColors.warningColor,\n                        borderWidth: 10\n                    }]}>\n\n                    {/* dialog icon */}\n                    <FAIcon\n                        style={this.styles.icon}\n                        name={\"exclamation\"} />\n\n                </View>\n\n                <View\n                    style={this.styles.contentMainParentView}>\n\n                    {/* dialog message view */}\n                    <View\n                        style={this.styles.contentMainView}>\n\n                        <View\n                            style={this.styles.contentView}>\n\n                            {/* title text */}\n                            <Text\n                                style={[this.styles.title, {\n                                    fontSize: hp(\"3\"),\n                                    color: mowColors.warningColor\n                                }]}>\n\n                                {this.state.title}\n\n                            </Text>\n\n                            {/* message text */}\n                            <Text\n                                style={this.styles.message}>\n\n                                {this.state.message}\n\n                            </Text>\n\n                        </View>\n\n                        {this._buttonView(mowColors.warningColor)}\n\n                    </View>\n\n                </View>\n\n            </View>\n\n        );\n    }\n\n    // dialog main container\n    render() {\n        if (this.state.showDialog !== false) {\n            return (\n\n                <Dialog\n                    overlayBackgroundColor={\"#454545\"}\n                    width={deviceWidth * 0.8}\n                    visible={this.state.showDialog}\n                    onTouchOutside={() => {\n                        if (this.state.onTouchOutside) {\n                            this.showDialog(false);\n                        }\n\n                    }}\n                    dialogAnimation={new SlideAnimation({\n                        slideFrom: 'bottom',\n                    })}\n                    dialogStyle={{ zIndex: 999, backgroundColor: \"transparent\" }}>\n\n\n                    {/* to detect dialog types here then render related dialog type */}\n                    <View>\n\n                        {\n                            !this.state.dialogType &&\n                            this._default()\n                        }\n\n                        {\n                            this.state.dialogType === dialogType.DEFAULT &&\n                            this._default()\n                        }\n\n                        {\n                            this.state.dialogType === dialogType.SUCCESS &&\n                            this._success()\n                        }\n\n                        {\n                            this.state.dialogType === dialogType.ERROR &&\n                            this._error()\n                        }\n\n                        {\n                            this.state.dialogType === dialogType.WARNING &&\n                            this._warning()\n                        }\n\n                    </View>\n\n\n                </Dialog>\n\n            )\n        }\n\n        return null;\n    }\n}"]},"metadata":{},"sourceType":"module"}