{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import View from\"react-native-web/dist/exports/View\";import{widthPercentageToDP as wp}from'react-native-responsive-screen';import{connect}from'react-redux';import{Loading}from\"../../components/Loading/loading\";import{MowButtonBasic}from\"../../components/ui/Common/Button/MowButton\";import{MowInput}from\"../../components/ui/Common/Input/MowInput\";import MowContainer from\"../../components/ui/Core/Container/MowContainer\";import{CustomerController}from\"../../controller/customer.controller\";import{setUser}from\"../../store/actions/userActions\";import{USER}from\"../../store/types\";import{mowColors}from\"../../values/Colors/MowColors\";import{pageContainerStyle}from\"../../values/Styles/MowStyles\";import{_showToast}from\"../../components/ui/Common/Toast/MowToast\";var ProfileScreen=function(_React$Component){_inherits(ProfileScreen,_React$Component);var _super=_createSuper(ProfileScreen);function ProfileScreen(props){var _this;_classCallCheck(this,ProfileScreen);_this=_super.call(this,props);_this.modelController=new CustomerController();_this.inputStyle={container:{backgroundColor:mowColors.viewBGColor}};_this.updateData=function(){_this.setState({isLoading:true});var _this$state=_this.state,firstName=_this$state.firstName,lastName=_this$state.lastName,email=_this$state.email;_this.modelController.update(_this.props.user.user.uuid,{firstName:firstName,lastName:lastName,email:email}).subscribe(function _callee(result){var user;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=result.data.data;_this.props.setUser(user);_context.next=4;return _regeneratorRuntime.awrap(AsyncStorage.setItem(USER,JSON.stringify(user)));case 4:_showToast.success('Profile Updated');_this.setState({isLoading:false});case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);});};_this.onChange=function(name,value){if(name==='firstName'){_this.setState({firstName:value});}if(name==='lastName'){_this.setState({lastName:value});}if(name==='email'){_this.setState({email:value});}};_this.state={isLoading:null,firstName:_this.props.user.user.firstName,lastName:_this.props.user.user.lastName,email:_this.props.user.user.email};return _this;}_createClass(ProfileScreen,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"render\",value:function render(){var _this2=this;var user=this.props.user.user;return React.createElement(MowContainer,{navigation:this.props.navigation,footerActiveIndex:2,title:\"Profile\"},user===null?React.createElement(View,null,React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null)):React.createElement(View,null,React.createElement(View,{style:pageContainerStyle},React.createElement(MowInput,{value:this.state.firstName,containerStyle:this.inputStyle.container,onChangeText:function onChangeText(value){return _this2.onChange('firstName',value);},placeholder:'First Name',type:'text'}),React.createElement(MowInput,{value:this.state.lastName,containerStyle:this.inputStyle.container,onChangeText:function onChangeText(value){return _this2.onChange('lastName',value);},placeholder:'Last Name',type:'text'}),React.createElement(MowInput,{value:this.state.email,containerStyle:this.inputStyle.container,onChangeText:function onChangeText(value){return _this2.onChange('email',value);},placeholder:'Email',type:'text'}),React.createElement(View,{style:{marginHorizontal:wp('3%')}},React.createElement(MowButtonBasic,{disabled:this.state.firstName===null||this.state.lastName===null||this.state.email===null,onPress:this.updateData,size:'medium',type:'success'},this.state.isLoading?'Saving.. Please Wait':'Save')))));}}]);return ProfileScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){var user=state.user;return{user:user};};var mapDispatchToProps={setUser:setUser};export default connect(mapStateToProps,mapDispatchToProps)(ProfileScreen);","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/scenes/account/profile.component.tsx"],"names":["widthPercentageToDP","ProfileScreen","React","modelController","inputStyle","container","backgroundColor","mowColors","isLoading","firstName","lastName","email","user","result","AsyncStorage","JSON","_showToast","name","marginHorizontal","wp","mapStateToProps","state","mapDispatchToProps","setUser","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AsyncStorage, View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { connect } from 'react-redux';\nimport { Loading } from '../../components/Loading/loading';\nimport { MowButtonBasic } from '../../components/ui/Common/Button/MowButton';\nimport { MowInput } from '../../components/ui/Common/Input/MowInput';\nimport MowContainer from '../../components/ui/Core/Container/MowContainer';\nimport { CustomerController } from '../../controller/customer.controller';\nimport { setUser } from '../../store/actions/userActions';\nimport { USER } from '../../store/types';\nimport { mowColors } from '../../values/Colors/MowColors';\nimport { pageContainerStyle } from '../../values/Styles/MowStyles';\nimport { _showToast } from '../../components/ui/Common/Toast/MowToast';\n\ninterface IProps {\n    navigation: any;\n    user: any;\n    setUser(data: any): any;\n}\n\ninterface IState {\n    isLoading: boolean;\n\n    firstName: string;\n    lastName: string;\n    email: string;\n}\n\nclass ProfileScreen extends React.Component<IProps, IState> {\n\n    modelController = new CustomerController();\n\n    inputStyle = {\n        container: {\n            backgroundColor: mowColors.viewBGColor,\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: null,\n\n            firstName: this.props.user.user.firstName,\n            lastName: this.props.user.user.lastName,\n            email: this.props.user.user.email,\n        }\n    }\n\n    componentDidMount() {\n        // this._unsubscribe = this.props.navigation.addListener('focus', () => {\n        //     this.setState({ categories: null });\n        //     this.getCategories(this.props.category.department);\n        // })\n    }\n\n    componentWillUnmount() {\n        // this._unsubscribe();\n    }\n\n    updateData = () => {\n        this.setState({ isLoading: true });\n        const {\n            firstName,\n            lastName,\n            email,\n        } = this.state;\n\n        this.modelController.update(this.props.user.user.uuid, { firstName, lastName, email })\n            .subscribe(async (result: any) => {\n                const user = result.data.data;\n                this.props.setUser(user);\n                await AsyncStorage.setItem(USER, JSON.stringify(user));\n                _showToast.success('Profile Updated');\n                this.setState({ isLoading: false })\n            })\n    }\n\n    onChange = (name, value) => {\n        if (name === 'firstName') {\n            this.setState({ firstName: value })\n        }\n\n        if (name === 'lastName') {\n            this.setState({ lastName: value })\n        }\n\n        if (name === 'email') {\n            this.setState({ email: value })\n        }\n    }\n\n    render() {\n        const user = this.props.user.user;\n        return (\n            <MowContainer\n                navigation={this.props.navigation}\n                footerActiveIndex={2}\n                title='Profile'>\n                {\n                    user === null ?\n                        <View>\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                        </View> :\n                        <View>\n                            <View\n                                style={pageContainerStyle}>\n                                <MowInput\n                                    value={this.state.firstName}\n                                    containerStyle={this.inputStyle.container}\n                                    onChangeText={value => this.onChange('firstName', value)}\n                                    placeholder={'First Name'}\n                                    type={'text'} />\n                                <MowInput\n                                    value={this.state.lastName}\n                                    containerStyle={this.inputStyle.container}\n                                    onChangeText={value => this.onChange('lastName', value)}\n                                    placeholder={'Last Name'}\n                                    type={'text'} />\n                                <MowInput\n                                    value={this.state.email}\n                                    containerStyle={this.inputStyle.container}\n                                    onChangeText={value => this.onChange('email', value)}\n                                    placeholder={'Email'}\n                                    type={'text'} />\n                                <View\n                                    style={{ marginHorizontal: wp('3%') }}>\n                                    <MowButtonBasic\n                                        disabled={\n                                            this.state.firstName === null ||\n                                            this.state.lastName === null ||\n                                            this.state.email === null\n                                        }\n                                        onPress={this.updateData}\n                                        size={'medium'}\n                                        type={'success'}>\n                                        {this.state.isLoading ? 'Saving.. Please Wait' : 'Save'}\n                                    </MowButtonBasic>\n                                </View>\n                            </View>\n\n                        </View>\n                }\n            </MowContainer>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state;\n    return { user };\n};\nconst mapDispatchToProps = {\n    setUser: setUser,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileScreen);"]},"metadata":{},"sourceType":"module"}