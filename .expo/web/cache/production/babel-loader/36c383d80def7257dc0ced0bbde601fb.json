{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import Image from\"react-native-web/dist/exports/Image\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{heightPercentageToDP as hp,widthPercentageToDP as wp}from'react-native-responsive-screen';import Carousel from'react-native-snap-carousel';import{connect}from'react-redux';import{Loading}from\"../../components/Loading/loading\";import{MowButtonBasic}from\"../../components/ui/Common/Button/MowButton\";import{_showToast}from\"../../components/ui/Common/Toast/MowToast\";import MowContainer from\"../../components/ui/Core/Container/MowContainer\";import{ProductController}from\"../../controller/product.controller\";import{addToCart,removeFromCart,setSelectedProduct}from\"../../store/actions/productActions\";import{mowColors}from\"../../values/Colors/MowColors\";import{borderStyle,fontFamily}from\"../../values/Styles/MowStyles\";import{NoDataFound}from\"../../components/NoData/noData\";var ProductListScreen=function(_React$Component){_inherits(ProductListScreen,_React$Component);var _super=_createSuper(ProductListScreen);function ProductListScreen(props){var _this;_classCallCheck(this,ProductListScreen);_this=_super.call(this,props);_this.productController=new ProductController();_this._unsubscribe=null;_this._addToCart=function(product){_this.props.addToCart(product);_showToast.success('Added');};_this._removeFromCart=function(product){_this.props.removeFromCart(product);_showToast.warning('Removed');};_this.state={products:null,page:1,isLoading:false};return _this;}_createClass(ProductListScreen,[{key:\"isProductExistInCart\",value:function isProductExistInCart(product){var cart=this.props.product.cart;var isExist=cart.filter(function(o){return o.uuid===product.uuid;});if(isExist.length>0){return true;}else{return false;}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._unsubscribe=this.props.navigation.addListener('focus',function(){_this2.setState({products:null});_this2.getProducts();});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._unsubscribe();}},{key:\"getProducts\",value:function getProducts(isNext){var _this3=this;var page=this.state.page;this.productController.filter({take:10,page:page,department:this.props.category.department.uuid,category:this.props.category.category.uuid,subCategory:this.props.category.subCategory.uuid,isOnline:'ONLINE'}).subscribe(function(result){if(isNext){page+=1;}else{if(page>1){page--;}}_this3.setState({products:result.data.data,page:page,isLoading:false});});}},{key:\"getPromotion\",value:function getPromotion(product){var user=this.props.user.user;if(product.hasPromotion){if(user!==null&&user.isMembershipActivated===1){return\"BDT \"+product.promotionPriceOne+\" OFF\";}else{return\"BDT \"+product.promotionMrp+\" OFF\";}}else{return false;}}},{key:\"getPromotionalPrice\",value:function getPromotionalPrice(product){var user=this.props.user.user;if(user!==null&&user.isMembershipActivated===1){if(product.hasPromotion){return product.priceOne-product.promotionPriceOne;}else{return product.priceOne;}}else{if(product.hasPromotion){return product.mrp-product.promotionMrp;}else{return product.mrp;}}}},{key:\"getActualPrice\",value:function getActualPrice(product){var user=this.props.user.user;if(user!==null&&user.isMembershipActivated===1){return product.priceOne;}else{return product.mrp;}}},{key:\"onSelectProduct\",value:function onSelectProduct(product){this.props.setSelectedProduct(product);this.props.navigation.navigate('ProductDetails');}},{key:\"_renderImages\",value:function _renderImages(_ref){var item=_ref.item,index=_ref.index;return React.createElement(Image,{style:{height:'100%',width:'100%',borderRadius:10},resizeMode:'stretch',source:{uri:item}});}},{key:\"render\",value:function render(){var _this4=this;var products=this.state.products;return React.createElement(MowContainer,{navigation:this.props.navigation,title:'Products'},products===null?React.createElement(View,null,React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null)):products.length===0?React.createElement(NoDataFound,{message:\"No Product\"}):React.createElement(View,{style:{flex:1}},React.createElement(FlatList,{keyExtractor:function keyExtractor(item,index){return index.toString();},style:{paddingHorizontal:wp('3%')},data:products,renderItem:function renderItem(_ref2){var item=_ref2.item,index=_ref2.index;return React.createElement(View,{key:index,style:_objectSpread({margin:5,marginVertical:8,flex:1,flexDirection:'row'},borderStyle,{height:hp(14),width:'98%',borderRadius:10})},React.createElement(TouchableOpacity,{onPress:function onPress(){_this4.onSelectProduct(item);},style:{marginRight:10,borderRadius:10,alignItems:'center',justifyContent:'center'}},React.createElement(Carousel,{removeClippedSubviews:false,ref:function ref(c){_this4._carousel=c;},data:[item.featuredImage],sliderWidth:wp('30%'),itemWidth:wp('30%'),renderItem:_this4._renderImages}),item.stock===0?React.createElement(View,{style:{position:'absolute',opacity:0.8,backgroundColor:'#848484',width:'100%'}},React.createElement(Text,{style:{fontSize:hp('1.8%'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,textAlign:'center',color:'#ffffff'}},\"Out Of Stock\")):null),React.createElement(View,null,React.createElement(View,{style:{height:hp(8)}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this4.onSelectProduct(item);}},React.createElement(Text,{numberOfLines:1,style:{marginTop:1,fontSize:hp('1.6%'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,textAlign:'left',color:mowColors.titleTextColor,fontFamily:fontFamily.regular}},item.name),React.createElement(Text,{numberOfLines:1,style:{marginTop:1,fontSize:hp('1.6%'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,textAlign:'left',color:mowColors.titleTextColor,fontFamily:fontFamily.regular}},\"(\",item.purUomName,\")\")),React.createElement(View,{style:{flexDirection:'row',marginTop:1,alignItems:'center'}},_this4.getPromotion(item)?React.createElement(View,{style:{backgroundColor:mowColors.successColor,borderRadius:5,justifyContent:'center',alignItems:'center',width:wp('15%'),height:hp('3.5%')}},React.createElement(Text,{style:{fontSize:hp('1.6%'),fontWeight:'bold',fontStyle:'normal',letterSpacing:0,textAlign:'left',color:'#ffffff',fontFamily:fontFamily.bold}},_this4.getPromotion(item))):null,item.hasPromotion?React.createElement(View,{style:{marginLeft:10}},React.createElement(View,{style:{alignItems:'center',justifyContent:'center'}},React.createElement(Text,{style:{fontSize:hp('1.5%'),fontWeight:'300',fontStyle:'normal',letterSpacing:0,textAlign:'center',color:mowColors.textColor,fontFamily:fontFamily.light}},_this4.getActualPrice(item),\" BDT\"),React.createElement(View,{style:{backgroundColor:mowColors.textColor,width:'100%',height:hp('0.1%'),position:'absolute'}})),React.createElement(Text,{style:{fontSize:hp('1.7%'),fontWeight:'bold',fontStyle:'normal',letterSpacing:0,textAlign:'center',color:mowColors.titleTextColor,fontFamily:fontFamily.bold}},_this4.getPromotionalPrice(item),\" BDT\")):React.createElement(View,{style:{marginLeft:10}},React.createElement(Text,{style:{fontSize:hp('1.7%'),fontWeight:'bold',fontStyle:'normal',letterSpacing:0,textAlign:'center',color:mowColors.titleTextColor,fontFamily:fontFamily.bold}},_this4.getActualPrice(item),\" BDT\")))),item.stock!==0?React.createElement(View,{style:{width:wp(25),marginTop:hp(0.5)}},_this4.isProductExistInCart(item)?React.createElement(MowButtonBasic,{containerStyle:{marginBottom:0,marginTop:10,borderColor:mowColors.textColor},textStyle:{color:mowColors.textColor},onPress:function onPress(){_this4._removeFromCart(item);},type:'success',size:'xSmall',filled:false},\"Remove From Cart\"):React.createElement(MowButtonBasic,{containerStyle:{marginBottom:0,marginTop:10,borderColor:mowColors.textColor},textStyle:{color:mowColors.textColor},onPress:function onPress(){_this4._addToCart(item);},type:'success',size:'xSmall',filled:false},\"Add To Cart\")):null));}}),products!==null&&products.length<10?null:React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-between'}},React.createElement(View,{style:{flex:1,opacity:0.8,width:'50%',marginStart:10}},React.createElement(TouchableOpacity,{disabled:this.state.page===1,onPress:function onPress(){_this4.getProducts(false);}},React.createElement(Text,{style:{fontSize:hp('2.8%'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,textAlign:'left'}},\"Prev\"))),React.createElement(View,{style:{flex:1,opacity:0.8,width:'50%',marginEnd:10}},React.createElement(TouchableOpacity,{onPress:function onPress(){_this4.getProducts(true);}},React.createElement(Text,{style:{fontSize:hp('2.8%'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,textAlign:'right'}},\"Next\"))))));}}]);return ProductListScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){var user=state.user,product=state.product,category=state.category;return{user:user,product:product,category:category};};var mapDispatchToProps={setSelectedProduct:setSelectedProduct,addToCart:addToCart,removeFromCart:removeFromCart};export default connect(mapStateToProps,mapDispatchToProps)(ProductListScreen);","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/scenes/product/productList.component.tsx"],"names":["heightPercentageToDP","widthPercentageToDP","ProductListScreen","React","productController","_unsubscribe","products","page","isLoading","_showToast","product","cart","isExist","o","isNext","take","department","category","subCategory","isOnline","result","user","item","index","height","width","borderRadius","uri","flex","paddingHorizontal","wp","margin","marginVertical","flexDirection","hp","marginRight","alignItems","justifyContent","position","opacity","backgroundColor","fontSize","fontWeight","fontStyle","letterSpacing","textAlign","color","marginTop","mowColors","fontFamily","marginLeft","marginBottom","borderColor","marginStart","marginEnd","mapStateToProps","state","mapDispatchToProps","setSelectedProduct","addToCart","removeFromCart","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, Image, ScrollView, Text, TouchableOpacity, View } from 'react-native';\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport Carousel from 'react-native-snap-carousel';\nimport { connect } from 'react-redux';\nimport { Loading } from '../../components/Loading/loading';\nimport { MowButtonBasic } from '../../components/ui/Common/Button/MowButton';\nimport { _showToast } from '../../components/ui/Common/Toast/MowToast';\nimport MowContainer from '../../components/ui/Core/Container/MowContainer';\nimport { ProductController } from '../../controller/product.controller';\nimport { addToCart, removeFromCart, setSelectedProduct } from '../../store/actions/productActions';\nimport { mowColors } from '../../values/Colors/MowColors';\nimport { borderStyle, fontFamily } from '../../values/Styles/MowStyles';\nimport { NoDataFound } from '../../components/NoData/noData';\n\ninterface IProps {\n    navigation: any;\n    user: any;\n    product: any;\n    category: any;\n    setSelectedProduct(data): any;\n    addToCart(data): any;\n    removeFromCart(data): any;\n}\n\ninterface IState {\n    products: any;\n    page: number;\n    isLoading: boolean;\n}\n\nclass ProductListScreen extends React.Component<IProps, IState> {\n\n    _carousel: any;\n    productController = new ProductController();\n    _unsubscribe = null;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            products: null,\n            page: 1,\n            isLoading: false,\n        };\n    }\n\n    _addToCart = (product) => {\n        this.props.addToCart(product);\n        _showToast.success('Added');\n    }\n\n    _removeFromCart = (product) => {\n        this.props.removeFromCart(product);\n        _showToast.warning('Removed');\n    }\n\n    isProductExistInCart(product) {\n        const cart = this.props.product.cart;\n        const isExist = cart.filter(o => o.uuid === product.uuid);\n\n        if (isExist.length > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    componentDidMount() {\n        this._unsubscribe = this.props.navigation.addListener('focus', () => {\n            this.setState({ products: null })\n            this.getProducts();\n        })\n    }\n\n    componentWillUnmount() {\n        this._unsubscribe();\n    }\n\n    getProducts(isNext?) {\n        let { page } = this.state;\n        this.productController.filter(\n            {\n                take: 10,\n                page,\n                department: this.props.category.department.uuid,\n                category: this.props.category.category.uuid,\n                subCategory: this.props.category.subCategory.uuid,\n                isOnline: 'ONLINE',\n            })\n            .subscribe((result: any) => {\n                if (isNext) {\n                    page += 1;\n                } else {\n                    if (page > 1) {\n                        page--;\n                    }\n                }\n                this.setState({ products: result.data.data, page: page, isLoading: false });\n            })\n    }\n\n    getPromotion(product) {\n        const user = this.props.user.user;\n        if (product.hasPromotion) {\n            if (user !== null && user.isMembershipActivated === 1) {\n                return `BDT ${product.promotionPriceOne} OFF`;\n            } else {\n                return `BDT ${product.promotionMrp} OFF`;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    getPromotionalPrice(product) {\n        const user = this.props.user.user;\n        if (user !== null && user.isMembershipActivated === 1) {\n            if (product.hasPromotion) {\n                return product.priceOne - product.promotionPriceOne;\n            } else {\n                return product.priceOne;\n            }\n        } else {\n            if (product.hasPromotion) {\n                return product.mrp - product.promotionMrp;\n            } else {\n                return product.mrp;\n            }\n        }\n    }\n\n    getActualPrice(product) {\n        const user = this.props.user.user;\n        if (user !== null && user.isMembershipActivated === 1) {\n            return product.priceOne;\n        } else {\n            return product.mrp;\n        }\n    }\n\n    onSelectProduct(product) {\n        this.props.setSelectedProduct(product);\n        this.props.navigation.navigate('ProductDetails');\n    }\n\n    _renderImages({ item, index }) {\n        return (\n            <Image\n                style={{ height: '100%', width: '100%', borderRadius: 10 }}\n                resizeMode={'stretch'}\n                source={{ uri: item }} />\n        );\n    }\n\n    render() {\n        const { products } = this.state;\n        return (\n            <MowContainer\n                navigation={this.props.navigation}\n                title={'Products'}>\n                {/* <View\n                    style={{\n                        marginVertical: hp('2%'),\n                        marginHorizontal: wp('3%'),\n                        borderRadius: 5,\n                        backgroundColor: mowColors.filterHeaderBG,\n                        padding: 10,\n                        flexDirection: 'row',\n                    }}>\n                    <TouchableOpacity\n                        onPress={() => { }}\n                        style={{ flexDirection: 'row', flex: 5, alignItems: 'center', justifyContent: 'center' }}>\n                        <FAIcon\n                            style={{\n                                color: mowColors.textColor,\n                                fontSize: hp('3%'),\n                            }}\n                            name={'filter'} />\n                        <Text\n                            style={{\n                                fontSize: hp('1.8%'),\n                                fontWeight: '500',\n                                fontStyle: 'normal',\n                                letterSpacing: 0,\n                                textAlign: 'center',\n                                color: mowColors.textColor,\n                                marginLeft: 5,\n                                fontFamily: fontFamily.light,\n                            }}>\n                            Filter\n                        </Text>\n                    </TouchableOpacity>\n                </View> */}\n                {\n                    products === null ?\n                        <View>\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                        </View> :\n                        (\n                            products.length === 0 ?\n                                <NoDataFound message='No Product' /> :\n                                <View\n                                    style={{ flex: 1 }}>\n                                    {/* <ScrollView> */}\n                                    <FlatList\n                                        // key={index}\n                                        keyExtractor={(item, index) => index.toString()}\n                                        style={{ paddingHorizontal: wp('3%') }}\n                                        data={products}\n                                        renderItem={({ item, index }) => (\n                                            <View\n                                                key={index}\n                                                style={{\n                                                    margin: 5,\n                                                    marginVertical: 8,\n                                                    flex: 1,\n                                                    flexDirection: 'row',\n                                                    ...borderStyle,\n                                                    height: hp(14),\n                                                    width: '98%',\n                                                    borderRadius: 10,\n                                                }}>\n                                                <TouchableOpacity onPress={() => { this.onSelectProduct(item) }}\n                                                    style={{\n                                                        marginRight: 10,\n                                                        borderRadius: 10,\n                                                        alignItems: 'center',\n                                                        justifyContent: 'center',\n                                                    }}>\n                                                    <Carousel\n                                                        removeClippedSubviews={false}\n                                                        ref={(c) => { this._carousel = c; }}\n                                                        data={[item.featuredImage]}\n                                                        sliderWidth={wp('30%')}\n                                                        itemWidth={wp('30%')}\n                                                        renderItem={this._renderImages} />\n                                                    {\n                                                        item.stock === 0 ?\n                                                            <View\n                                                                style={{\n                                                                    position: 'absolute',\n                                                                    opacity: 0.8,\n                                                                    backgroundColor: '#848484',\n                                                                    width: '100%',\n                                                                }}>\n                                                                <Text\n                                                                    style={{\n                                                                        fontSize: hp('1.8%'),\n                                                                        fontWeight: 'normal',\n                                                                        fontStyle: 'normal',\n                                                                        letterSpacing: 0,\n                                                                        textAlign: 'center',\n                                                                        color: '#ffffff',\n                                                                    }}>\n                                                                    Out Of Stock\n                                                            </Text>\n                                                            </View> : null\n                                                    }\n                                                </TouchableOpacity>\n                                                <View>\n                                                    <View\n                                                        style={{ height: hp(8) }}>\n                                                        <TouchableOpacity onPress={() => { this.onSelectProduct(item) }}>\n                                                            <Text\n                                                                numberOfLines={1}\n                                                                style={{\n                                                                    marginTop: 1,\n                                                                    fontSize: hp('1.6%'),\n                                                                    fontWeight: 'normal',\n                                                                    fontStyle: 'normal',\n                                                                    letterSpacing: 0,\n                                                                    textAlign: 'left',\n                                                                    color: mowColors.titleTextColor,\n                                                                    fontFamily: fontFamily.regular,\n                                                                }}>\n                                                                {item.name}\n                                                            </Text>\n                                                            <Text\n                                                                numberOfLines={1}\n                                                                style={{\n                                                                    marginTop: 1,\n                                                                    fontSize: hp('1.6%'),\n                                                                    fontWeight: 'normal',\n                                                                    fontStyle: 'normal',\n                                                                    letterSpacing: 0,\n                                                                    textAlign: 'left',\n                                                                    color: mowColors.titleTextColor,\n                                                                    fontFamily: fontFamily.regular,\n                                                                }}>\n                                                                ({item.purUomName})\n                                                </Text>\n                                                        </TouchableOpacity>\n                                                        {/* <View\n                                                style={{ flexDirection: 'row', alignItems: 'center', marginTop: 1 }}>\n                                                <MowStarView\n                                                    width={hp(8)}\n                                                    height={hp(1.5)}\n                                                    score={item.rating} />\n                                                <Text\n                                                    style={{\n                                                        marginLeft: 3,\n                                                        fontSize: hp('1.3%'),\n                                                        letterSpacing: 0,\n                                                        textAlign: 'left',\n                                                        color: mowColors.textColor,\n                                                        fontFamily: fontFamily.regular,\n                                                    }}>\n                                                    {'('}{item.ratingCount}{')'}\n                                                </Text>\n                                            </View> */}\n                                                        <View\n                                                            style={{ flexDirection: 'row', marginTop: 1, alignItems: 'center' }}>\n                                                            {\n                                                                this.getPromotion(item) ? <View\n                                                                    style={{\n                                                                        backgroundColor: mowColors.successColor,\n                                                                        borderRadius: 5,\n                                                                        justifyContent: 'center',\n                                                                        alignItems: 'center',\n                                                                        width: wp('15%'),\n                                                                        height: hp('3.5%'),\n                                                                    }}>\n                                                                    <Text\n                                                                        style={{\n                                                                            fontSize: hp('1.6%'),\n                                                                            fontWeight: 'bold',\n                                                                            fontStyle: 'normal',\n                                                                            letterSpacing: 0,\n                                                                            textAlign: 'left',\n                                                                            color: '#ffffff',\n                                                                            fontFamily: fontFamily.bold,\n                                                                        }}>\n                                                                        {this.getPromotion(item)}\n                                                                    </Text>\n                                                                </View> : null\n                                                            }\n                                                            {\n                                                                item.hasPromotion ? <View\n                                                                    style={{ marginLeft: 10 }}>\n                                                                    <View\n                                                                        style={{ alignItems: 'center', justifyContent: 'center' }}>\n                                                                        <Text\n                                                                            style={{\n                                                                                fontSize: hp('1.5%'),\n                                                                                fontWeight: '300',\n                                                                                fontStyle: 'normal',\n                                                                                letterSpacing: 0,\n                                                                                textAlign: 'center',\n                                                                                color: mowColors.textColor,\n                                                                                fontFamily: fontFamily.light,\n                                                                            }}>\n                                                                            {this.getActualPrice(item)} BDT\n                                                            </Text>\n                                                                        <View\n                                                                            style={{\n                                                                                backgroundColor: mowColors.textColor,\n                                                                                width: '100%',\n                                                                                height: hp('0.1%'),\n                                                                                position: 'absolute',\n                                                                            }} />\n                                                                    </View>\n                                                                    <Text\n                                                                        style={{\n                                                                            fontSize: hp('1.7%'),\n                                                                            fontWeight: 'bold',\n                                                                            fontStyle: 'normal',\n                                                                            letterSpacing: 0,\n                                                                            textAlign: 'center',\n                                                                            color: mowColors.titleTextColor,\n                                                                            fontFamily: fontFamily.bold,\n                                                                        }}>\n                                                                        {this.getPromotionalPrice(item)} BDT\n                                                        </Text>\n                                                                </View> : <View\n                                                                    style={{ marginLeft: 10 }}>\n                                                                        <Text\n                                                                            style={{\n                                                                                fontSize: hp('1.7%'),\n                                                                                fontWeight: 'bold',\n                                                                                fontStyle: 'normal',\n                                                                                letterSpacing: 0,\n                                                                                textAlign: 'center',\n                                                                                color: mowColors.titleTextColor,\n                                                                                fontFamily: fontFamily.bold,\n                                                                            }}>\n                                                                            {this.getActualPrice(item)} BDT\n                                                            </Text>\n                                                                    </View>\n                                                            }\n                                                        </View>\n                                                    </View>\n                                                    {\n                                                        item.stock !== 0 ?\n                                                            <View\n                                                                style={{ width: wp(25), marginTop: hp(0.5) }}>\n                                                                {\n                                                                    this.isProductExistInCart(item) ?\n                                                                        <MowButtonBasic\n                                                                            containerStyle={{\n                                                                                marginBottom: 0,\n                                                                                marginTop: 10,\n                                                                                borderColor: mowColors.textColor,\n                                                                            }}\n                                                                            textStyle={{ color: mowColors.textColor }}\n                                                                            onPress={() => { this._removeFromCart(item); }}\n                                                                            type={'success'}\n                                                                            size={'xSmall'}\n                                                                            filled={false}>\n                                                                            Remove From Cart\n                                                            </MowButtonBasic> :\n                                                                        <MowButtonBasic\n                                                                            containerStyle={{\n                                                                                marginBottom: 0,\n                                                                                marginTop: 10,\n                                                                                borderColor: mowColors.textColor,\n                                                                            }}\n                                                                            textStyle={{ color: mowColors.textColor }}\n                                                                            onPress={() => { this._addToCart(item); }}\n                                                                            type={'success'}\n                                                                            size={'xSmall'}\n                                                                            filled={false}>\n                                                                            Add To Cart\n                                                            </MowButtonBasic>\n                                                                }\n                                                            </View> : null\n                                                    }\n                                                </View>\n                                            </View>\n                                        )}\n                                    />\n                                    {/* <MowButtonBasic\n                                onPress={() => { this.getProducts(true) }}\n                                style={{ marginTop: hp('3%') }}\n                                containerStyle={{ marginTop: hp('5%') }}\n                                textStyle={{ color: mowColors.mainColor, fontWeight: 'normal', letterSpacing: 0 }}\n                                type={'default'}>\n\n                                {this.state.isLoading ? 'Loading More Data' : 'Load More'}\n\n                            </MowButtonBasic> */}\n                                    {/* </ScrollView> */}\n\n                                    {\n                                        products !== null && products.length < 10 ? null :\n                                            <View style={{\n                                                flexDirection: 'row',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <View\n                                                    style={{\n                                                        flex: 1,\n                                                        opacity: 0.8,\n                                                        width: '50%',\n                                                        marginStart: 10,\n                                                    }}>\n                                                    <TouchableOpacity\n                                                        disabled={this.state.page === 1}\n                                                        onPress={() => { this.getProducts(false) }}>\n                                                        <Text\n                                                            style={{\n                                                                fontSize: hp('2.8%'),\n                                                                fontWeight: 'normal',\n                                                                fontStyle: 'normal',\n                                                                letterSpacing: 0,\n                                                                textAlign: 'left',\n                                                            }}>\n                                                            Prev\n                                            </Text>\n                                                    </TouchableOpacity>\n                                                </View>\n                                                <View\n                                                    style={{\n                                                        flex: 1,\n                                                        opacity: 0.8,\n                                                        width: '50%',\n                                                        marginEnd: 10,\n                                                    }}>\n                                                    <TouchableOpacity onPress={() => { this.getProducts(true) }}>\n                                                        <Text\n                                                            style={{\n                                                                fontSize: hp('2.8%'),\n                                                                fontWeight: 'normal',\n                                                                fontStyle: 'normal',\n                                                                letterSpacing: 0,\n                                                                textAlign: 'right',\n                                                            }}>\n                                                            Next\n                                            </Text>\n                                                    </TouchableOpacity>\n                                                </View>\n                                            </View>\n                                    }\n\n                                </View>\n\n                        )\n                }\n\n                {/* <MowPicker\n                    key={2}\n                    pickerTitle='Order By'\n                    selectedValue={this.state.pickerSelectedId}\n                    onSelect={(obj) => { }}\n                    title='Sort'\n                    search={false}\n                    modalVisible={this.state.pickerVisible}\n                    onClosed={() => { this.setState({ pickerVisible: false }); }}\n                    data={pickerSortData} /> */}\n\n            </MowContainer>\n\n        );\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    const { user, product, category } = state;\n    return { user, product, category };\n};\nconst mapDispatchToProps = {\n    setSelectedProduct: setSelectedProduct,\n    addToCart: addToCart,\n    removeFromCart: removeFromCart,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListScreen);"]},"metadata":{},"sourceType":"module"}