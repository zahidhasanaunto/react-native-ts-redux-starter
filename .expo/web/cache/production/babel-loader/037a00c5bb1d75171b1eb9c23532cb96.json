{"ast":null,"code":"function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from'react-native-reanimated';var interpolate=Animated.interpolate,cond=Animated.cond,greaterThan=Animated.greaterThan;var PROGRESS_EPSILON=0.05;var Overlay=React.forwardRef(function Overlay(_ref,ref){var progress=_ref.progress,style=_ref.style,props=_objectWithoutProperties(_ref,[\"progress\",\"style\"]);var animatedStyle={opacity:interpolate(progress,{inputRange:[PROGRESS_EPSILON,1],outputRange:[0,1]}),zIndex:cond(greaterThan(progress,PROGRESS_EPSILON),0,-1)};return React.createElement(Animated.View,_extends({},props,{ref:ref,style:[styles.overlay,animatedStyle,style]}));});var styles=StyleSheet.create({overlay:_objectSpread({},StyleSheet.absoluteFillObject,{backgroundColor:'rgba(0, 0, 0, 0.5)'},Platform.select({web:{WebkitTapHighlightColor:'transparent'},default:{}}))});export default Overlay;","map":{"version":3,"sources":["Overlay.tsx"],"names":["greaterThan","PROGRESS_EPSILON","Overlay","style","props","animatedStyle","opacity","interpolate","inputRange","outputRange","zIndex","cond","styles","overlay","StyleSheet","backgroundColor","web","WebkitTapHighlightColor","default"],"mappings":"i7DAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,8HAEA,MAAA,CAAA,QAAA,KAAA,yBAAA,C,GAEM,CAAA,W,CAAN,Q,CAAM,W,CAAA,I,CAAN,Q,CAAM,I,CAAqBA,W,CAA3B,Q,CAA2BA,W,CAE3B,GAAMC,CAAAA,gBAAgB,CAAtB,IAAA,CAMA,GAAMC,CAAAA,OAAO,CAAG,KAAK,CAAL,UAAA,CAAiB,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAG/B,IAFA,CAAA,QAEA,CAAA,IAAA,CAFA,QAEA,CAFYC,KAEZ,CAAA,IAAA,CAFYA,KAEZ,CAFsBC,KAEtB,CAAA,wBAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,OAAO,CAAEC,WAAW,CAAA,QAAA,CAAW,CAC7BC,UAAU,CAAE,CAAA,gBAAA,CADiB,CACjB,CADiB,CAE7BC,WAAW,CAAE,CAAA,CAAA,CAAA,CAAA,CAFgB,CAAX,CADA,CAQpBC,MAAM,CAAEC,IAAI,CAACX,WAAW,CAAA,QAAA,CAAZ,gBAAY,CAAZ,CAAA,CAAA,CAA6C,CAA7C,CAAA,CARQ,CAAtB,CAWA,MACE,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAEE,GAAG,CAFL,GAAA,CAGE,KAAK,CAAE,CAACY,MAAM,CAAP,OAAA,CAAA,aAAA,CAAA,KAAA,CAHT,CAAA,CAAA,CADF,CAfF,CAAgB,CAAhB,CAwBA,GAAMA,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,OAAO,CAAA,aAAA,CAAA,EAAA,CACFC,UAAU,CADR,kBAAA,CAAA,CAELC,eAAe,CAAE,oBAFZ,CAAA,CAGF,QAAQ,CAAR,MAAA,CAAgB,CACjBC,GAAG,CAAE,CAEHC,uBAAuB,CAAE,aAFtB,CADY,CAKjBC,OAAO,CAAE,EALQ,CAAhB,CAHE,CADwB,CAAlB,CAAf,CAcA,cAAA,CAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst { interpolate, cond, greaterThan } = Animated;\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.Node<number>;\n};\n\nconst Overlay = React.forwardRef(function Overlay(\n  { progress, style, ...props }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = {\n    opacity: interpolate(progress, {\n      inputRange: [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1],\n    }),\n    // We don't want the user to be able to press through the overlay when drawer is open\n    // One approach is to adjust the pointerEvents based on the progress\n    // But we can also send the overlay behind the screen, which works, and is much less code\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1),\n  };\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, animatedStyle, style]}\n    />\n  );\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    ...Platform.select({\n      web: {\n        // Disable touch highlight on mobile Safari.\n        WebkitTapHighlightColor: 'transparent',\n      },\n      default: {},\n    }),\n  },\n});\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}