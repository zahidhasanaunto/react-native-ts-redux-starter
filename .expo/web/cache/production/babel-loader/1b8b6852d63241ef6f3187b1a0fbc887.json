{"ast":null,"code":"import*as React from'react';import DrawerOpenContext from\"./DrawerOpenContext\";export default function useIsDrawerOpen(){var isDrawerOpen=React.useContext(DrawerOpenContext);if(typeof isDrawerOpen!=='boolean'){throw new Error(\"Couldn't find a drawer. Is your component inside a drawer navigator?\");}return isDrawerOpen;}","map":{"version":3,"sources":["useIsDrawerOpen.tsx"],"names":["isDrawerOpen","React"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,iBAAA,2BAKA,cAAe,SAAA,CAAA,eAAA,EAA2B,CACxC,GAAMA,CAAAA,YAAY,CAAGC,KAAK,CAALA,UAAAA,CAArB,iBAAqBA,CAArB,CAEA,GAAI,MAAA,CAAA,YAAA,GAAJ,SAAA,CAAuC,CACrC,KAAM,IAAA,CAAA,KAAA,CAAN,sEAAM,CAAN,CAGD,CAED,MAAA,CAAA,YAAA,CACD","sourcesContent":["import * as React from 'react';\nimport DrawerOpenContext from './DrawerOpenContext';\n\n/**\n * Hook to detect if the drawer is open in a parent navigator.\n */\nexport default function useIsDrawerOpen() {\n  const isDrawerOpen = React.useContext(DrawerOpenContext);\n\n  if (typeof isDrawerOpen !== 'boolean') {\n    throw new Error(\n      \"Couldn't find a drawer. Is your component inside a drawer navigator?\"\n    );\n  }\n\n  return isDrawerOpen;\n}\n"]},"metadata":{},"sourceType":"module"}