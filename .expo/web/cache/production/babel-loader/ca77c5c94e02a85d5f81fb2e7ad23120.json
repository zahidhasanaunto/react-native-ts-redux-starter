{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import{heightPercentageToDP as hp}from'react-native-responsive-screen';import{connect}from'react-redux';import{Loading}from\"../../components/Loading/loading\";import{NoDataFound}from\"../../components/NoData/noData\";import MowContainer from\"../../components/ui/Core/Container/MowContainer\";import{OrderController}from\"../../controller/order.controller\";import{mowColors}from\"../../values/Colors/MowColors\";import{OrderItem}from\"./orderItem.component\";import{setSelectedOrder}from\"../../store/actions/orderActions\";var OrdersScreen=function(_React$Component){_inherits(OrdersScreen,_React$Component);var _super=_createSuper(OrdersScreen);function OrdersScreen(props){var _this;_classCallCheck(this,OrdersScreen);_this=_super.call(this,props);_this.categoryButtonStyle={parent:{flexDirection:'row'},container:{flex:1,marginVertical:10,marginHorizontal:25},button:{},activeButton:{borderBottomWidth:2,borderBottomColor:mowColors.successColor,paddingBottom:5},text:{textAlign:'center',fontSize:hp('1.7'),fontWeight:'normal',fontStyle:'normal',letterSpacing:0,color:mowColors.titleTextColor},activeText:{textAlign:'center',fontSize:hp('1.7'),fontWeight:'bold',fontStyle:'normal',letterSpacing:0,color:mowColors.titleTextColor}};_this.orderController=new OrderController();_this._unsubscribe=null;_this.getData=function(status){_this.setState({orders:null});_this.orderController.getAll({take:'all',customer:_this.props.user.user.uuid,orderStatus:status==='all'?'':status}).subscribe(function(result){_this.setState({orders:result.data.data});});};_this.onClickTab=function(status){_this.setState({selected:status});_this.getData(status);};_this.onClickOrderItem=function(item){_this.props.setSelectedOrder(item);_this.props.navigation.navigate('OrderDetails');};_this.state={orders:null,selected:'all'};return _this;}_createClass(OrdersScreen,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._unsubscribe=this.props.navigation.addListener('focus',function(){_this2.getData('all');});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this._unsubscribe();}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(MowContainer,{navigation:this.props.navigation,footerActiveIndex:4,title:\"Orders\"},React.createElement(View,{style:{flexDirection:'row'}},React.createElement(View,{style:this.categoryButtonStyle.container},React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onClickTab('all');},style:this.state.selected==='all'?this.categoryButtonStyle.activeButton:this.categoryButtonStyle.button},React.createElement(Text,null,\"All Orders\"))),React.createElement(View,{style:this.categoryButtonStyle.container},React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onClickTab('pending');},style:this.state.selected==='pending'?this.categoryButtonStyle.activeButton:this.categoryButtonStyle.button},React.createElement(Text,null,\"Pending\"))),React.createElement(View,{style:this.categoryButtonStyle.container},React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onClickTab('delivered');},style:this.state.selected==='delivered'?this.categoryButtonStyle.activeButton:this.categoryButtonStyle.button},React.createElement(Text,null,\"Delivered\"))),React.createElement(View,{style:this.categoryButtonStyle.container},React.createElement(TouchableOpacity,{onPress:function onPress(){_this3.onClickTab('canceled');},style:this.state.selected==='canceled'?this.categoryButtonStyle.activeButton:this.categoryButtonStyle.button},React.createElement(Text,null,\"Canceled\")))),this.state.orders===null?React.createElement(View,null,React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null),React.createElement(Loading,null)):this.state.orders.length===0?React.createElement(NoDataFound,{message:'No Order'}):React.createElement(FlatList,{showsVerticalScrollIndicator:false,keyExtractor:function keyExtractor(item,index){return index.toString();},data:this.state.orders,renderItem:function renderItem(_ref){var item=_ref.item,index=_ref.index;return React.createElement(OrderItem,{onClick:function onClick(){return _this3.onClickOrderItem(item);},navigation:_this3.props.navigation,key:index,value:item});}}));}}]);return OrdersScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){var user=state.user;return{user:user};};var mapDispatchToProps={setSelectedOrder:setSelectedOrder};export default connect(mapStateToProps,mapDispatchToProps)(OrdersScreen);","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/scenes/orders/orders.component.tsx"],"names":["heightPercentageToDP","OrdersScreen","React","categoryButtonStyle","parent","flexDirection","container","flex","marginVertical","marginHorizontal","button","activeButton","borderBottomWidth","borderBottomColor","mowColors","paddingBottom","text","textAlign","fontSize","hp","fontWeight","fontStyle","letterSpacing","color","activeText","orderController","_unsubscribe","orders","selected","take","customer","orderStatus","status","result","index","item","mapStateToProps","user","state","mapDispatchToProps","setSelectedOrder","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, Text, TouchableOpacity, View } from 'react-native';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { connect } from 'react-redux';\nimport { Loading } from '../../components/Loading/loading';\nimport { NoDataFound } from '../../components/NoData/noData';\nimport MowContainer from '../../components/ui/Core/Container/MowContainer';\nimport { OrderController } from '../../controller/order.controller';\nimport { mowColors } from '../../values/Colors/MowColors';\nimport { OrderItem } from './orderItem.component';\nimport { setSelectedOrder } from '../../store/actions/orderActions';\n\ninterface IProps {\n    navigation: any;\n    user: any;\n    setSelectedOrder(data): any;\n}\n\ninterface IState {\n    orders: any;\n    selected: string;\n}\n\nclass OrdersScreen extends React.Component<IProps, IState> {\n\n    categoryButtonStyle = {\n        parent: {\n            flexDirection: 'row',\n        },\n        container: {\n            flex: 1,\n            marginVertical: 10,\n            marginHorizontal: 25,\n        },\n        button: {\n\n        },\n        activeButton: {\n            borderBottomWidth: 2,\n            borderBottomColor: mowColors.successColor,\n            paddingBottom: 5,\n        },\n        text: {\n            textAlign: 'center',\n            fontSize: hp('1.7'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            letterSpacing: 0,\n            color: mowColors.titleTextColor,\n        },\n        activeText: {\n            textAlign: 'center',\n            fontSize: hp('1.7'),\n            fontWeight: 'bold',\n            fontStyle: 'normal',\n            letterSpacing: 0,\n            color: mowColors.titleTextColor,\n        },\n    };\n\n    orderController = new OrderController();\n    _unsubscribe = null;\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            orders: null,\n            selected: 'all',\n        }\n    }\n\n    componentDidMount() {\n        this._unsubscribe = this.props.navigation.addListener('focus', () => {\n            this.getData('all');\n        })\n    }\n\n    componentWillUnmount() {\n        this._unsubscribe();\n    }\n\n    getData = (status) => {\n        this.setState({ orders: null });\n        this.orderController.getAll({ take: 'all', customer: this.props.user.user.uuid, orderStatus: status === 'all' ? '' : status })\n            .subscribe((result: any) => {\n                this.setState({ orders: result.data.data });\n            })\n    }\n\n    onClickTab = (status) => {\n        this.setState({ selected: status });\n        this.getData(status);\n    }\n\n    onClickOrderItem = (item) => {\n        this.props.setSelectedOrder(item);\n        this.props.navigation.navigate('OrderDetails');\n    }\n\n    render() {\n        return (\n            <MowContainer\n                navigation={this.props.navigation}\n                footerActiveIndex={4}\n                title='Orders'>\n                <View\n                    style={{ flexDirection: 'row' }}>\n                    <View\n                        style={this.categoryButtonStyle.container}>\n                        <TouchableOpacity\n                            onPress={() => { this.onClickTab('all'); }}\n                            style={\n                                this.state.selected === 'all' ?\n                                    this.categoryButtonStyle.activeButton : this.categoryButtonStyle.button\n                            }>\n                            <Text>\n                                All Orders\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                    <View\n                        style={this.categoryButtonStyle.container}>\n                        <TouchableOpacity\n                            onPress={() => { this.onClickTab('pending'); }}\n                            style={\n                                this.state.selected === 'pending' ?\n                                    this.categoryButtonStyle.activeButton : this.categoryButtonStyle.button\n                            }>\n                            <Text>\n                                Pending\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                    <View\n                        style={this.categoryButtonStyle.container}>\n                        <TouchableOpacity\n                            onPress={() => { this.onClickTab('delivered') }}\n                            style={\n                                this.state.selected === 'delivered' ?\n                                    this.categoryButtonStyle.activeButton : this.categoryButtonStyle.button\n                            }>\n                            <Text>\n                                Delivered\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                    <View\n                        style={this.categoryButtonStyle.container}>\n                        <TouchableOpacity\n                            onPress={() => { this.onClickTab('canceled') }}\n                            style={\n                                this.state.selected === 'canceled' ?\n                                    this.categoryButtonStyle.activeButton : this.categoryButtonStyle.button\n                            }>\n                            <Text>\n                                Canceled\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                {\n                    this.state.orders === null ?\n                        <View>\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                            <Loading />\n                        </View> : (\n                            this.state.orders.length === 0 ?\n                                <NoDataFound message={'No Order'} /> : <FlatList\n                                    showsVerticalScrollIndicator={false}\n                                    keyExtractor={(item, index) => index.toString()}\n                                    data={this.state.orders}\n                                    renderItem={({ item, index }) => (\n                                        <OrderItem\n                                            onClick={() => this.onClickOrderItem(item)}\n                                            navigation={this.props.navigation}\n                                            key={index}\n                                            value={item} />\n                                    )}\n                                />\n                        )\n                }\n            </MowContainer>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const { user } = state;\n    return { user };\n};\nconst mapDispatchToProps = {\n    setSelectedOrder: setSelectedOrder,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(OrdersScreen);"]},"metadata":{},"sourceType":"module"}