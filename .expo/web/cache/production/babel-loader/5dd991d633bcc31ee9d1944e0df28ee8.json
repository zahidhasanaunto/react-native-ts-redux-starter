{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import FlatList from\"react-native-web/dist/exports/FlatList\";import View from\"react-native-web/dist/exports/View\";import{heightPercentageToDP as hp}from'react-native-responsive-screen';import{connect}from'react-redux';import MowListItem from\"../../components/ui/Common/ListItem/MowListItem\";import MowContainer from\"../../components/ui/Core/Container/MowContainer\";import Fashion from\"../../sampleData/Fashion\";import{setCategory,setSubCategory}from\"../../store/actions/categoryActions\";import{fontFamily,pageContainerStyle}from\"../../values/Styles/MowStyles\";var CategoryDetailsScreen=function(_React$Component){_inherits(CategoryDetailsScreen,_React$Component);var _super=_createSuper(CategoryDetailsScreen);function CategoryDetailsScreen(){var _this;_classCallCheck(this,CategoryDetailsScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={selectedItemArr:[],listKey:0};return _this;}_createClass(CategoryDetailsScreen,[{key:\"_handleCategorySelection\",value:function _handleCategorySelection(index){var selectedArr=this.state.selectedItemArr;var length=Fashion.length;for(var i=0;i<length;i++){if(i!=index){selectedArr[i]=false;}}selectedArr[index]=!selectedArr[index];this.setState({selectedItemArr:selectedArr,listKey:this.state.listKey+1});}},{key:\"componentDidMount\",value:function componentDidMount(){console.log(this.props.category);}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(MowContainer,{navigation:this.props.navigation,title:\"Cat Title\"},React.createElement(FlatList,{key:this.state.listKey,showsVerticalScrollIndicator:false,keyExtractor:function keyExtractor(item,index){return index.toString();},data:Fashion,style:[pageContainerStyle,{marginTop:20}],renderItem:function renderItem(_ref){var item=_ref.item,index=_ref.index;return React.createElement(View,{key:index,style:{marginVertical:7}},React.createElement(MowListItem,{border:true,style:{height:hp('5%')},iconName:_this2.state.selectedItemArr[index]?'minus':'plus',onPress:function onPress(){_this2._handleCategorySelection(index);},title:item['title']}),_this2.state.selectedItemArr[index]&&React.createElement(FlatList,{key:_this2.state.listKey,showsVerticalScrollIndicator:false,keyExtractor:function keyExtractor(item,index){return index.toString();},data:item['subCategory'],style:{marginTop:10},renderItem:function renderItem(_ref2){var item=_ref2.item,index=_ref2.index;return React.createElement(View,{key:index,style:{width:'80%',marginLeft:'10%',marginRight:'5%',marginVertical:10}},React.createElement(MowListItem,{onPress:function onPress(){_this2.props.navigation.navigate('ProductList');},style:{height:hp('5%'),backgroundColor:'white '},titleTextStyle:{fontSize:hp('1.8%'),fontWeight:'normal',fontFamily:fontFamily.regular},title:item['title']}));}}));}}));}}]);return CategoryDetailsScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){var category=state.category;return{category:category};};var mapDispatchToProps={setCategory:setCategory,setSubCategory:setSubCategory};export default connect(mapStateToProps,mapDispatchToProps)(CategoryDetailsScreen);","map":{"version":3,"sources":["/home/aunto/Projects/WCL/wcl-app/src/scenes/category/categoryDetails.component.tsx"],"names":["heightPercentageToDP","CategoryDetailsScreen","React","state","selectedItemArr","listKey","index","selectedArr","length","Fashion","i","console","marginTop","item","marginVertical","height","hp","width","marginLeft","marginRight","backgroundColor","fontSize","fontWeight","fontFamily","mapStateToProps","category","mapDispatchToProps","setCategory","setSubCategory","connect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FlatList, View } from 'react-native';\nimport { heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { connect } from 'react-redux';\nimport MowListItem from '../../components/ui/Common/ListItem/MowListItem';\nimport MowContainer from '../../components/ui/Core/Container/MowContainer';\nimport Fashion from '../../sampleData/Fashion';\nimport { setCategory, setSubCategory } from '../../store/actions/categoryActions';\nimport { fontFamily, pageContainerStyle } from '../../values/Styles/MowStyles';\n\ninterface IProps {\n    navigation: any;\n    category: any;\n    setCategory(category: any): any;\n    setSubCategory(subCategory: any): any;\n}\n\nclass CategoryDetailsScreen extends React.Component<IProps, {}> {\n\n    state = {\n        selectedItemArr: [],\n        listKey: 0\n    };\n\n    // to handle category selection\n    _handleCategorySelection(index) {\n        let selectedArr = this.state.selectedItemArr;\n\n        let length = Fashion.length;\n\n        for (let i = 0; i < length; i++) {\n            if (i != index) {\n                // to set false all array values except selected index\n                selectedArr[i] = false;\n            }\n        }\n\n        // to update selected item as its opposite\n        selectedArr[index] = !selectedArr[index];\n\n        this.setState({ selectedItemArr: selectedArr, listKey: this.state.listKey + 1 });\n    }\n\n    componentDidMount() {\n        console.log(this.props.category);\n    }\n\n    render() {\n\n        return (\n\n            <MowContainer\n                navigation={this.props.navigation}\n                title='Cat Title'>\n\n                {/* category list */}\n                <FlatList\n                    key={this.state.listKey} // to refresh list when selection is changed by user\n                    showsVerticalScrollIndicator={false}\n                    keyExtractor={(item, index) => index.toString()}\n                    data={Fashion}\n                    style={[pageContainerStyle, { marginTop: 20 }]}\n                    renderItem={({ item, index }) => (\n\n                        // category item view\n                        <View\n                            key={index}\n                            style={{ marginVertical: 7 }}>\n\n                            {/* category item */}\n                            <MowListItem\n                                border={true}\n                                style={{ height: hp('5%') }}\n                                iconName={this.state.selectedItemArr[index] ? 'minus' : 'plus'}\n                                onPress={() => { this._handleCategorySelection(index) }}\n                                title={item['title']} />\n\n                            {/* subcategory list */}\n                            {\n                                this.state.selectedItemArr[index] &&\n\n                                <FlatList\n                                    key={this.state.listKey} // to refresh list when value change\n                                    showsVerticalScrollIndicator={false}\n                                    keyExtractor={(item, index) => index.toString()}\n                                    data={item['subCategory']}\n                                    style={{ marginTop: 10 }}\n                                    renderItem={({ item, index }) => (\n\n                                        // sub category item view\n                                        <View\n                                            key={index}\n                                            style={{ width: '80%', marginLeft: '10%', marginRight: '5%', marginVertical: 10 }}>\n\n                                            {/* sub category item */}\n                                            <MowListItem\n                                                onPress={() => { this.props.navigation.navigate('ProductList') }}\n                                                style={{ height: hp('5%'), backgroundColor: 'white ' }}\n                                                titleTextStyle={{ fontSize: hp('1.8%'), fontWeight: 'normal', fontFamily: fontFamily.regular }}\n                                                title={item['title']} />\n\n                                        </View>\n\n                                    )} />\n                            }\n\n\n                        </View>\n\n                    )}\n                />\n\n            </MowContainer>\n\n        )\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    const { category } = state;\n    return { category };\n};\nconst mapDispatchToProps = {\n    setCategory: setCategory,\n    setSubCategory: setSubCategory,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryDetailsScreen);"]},"metadata":{},"sourceType":"module"}